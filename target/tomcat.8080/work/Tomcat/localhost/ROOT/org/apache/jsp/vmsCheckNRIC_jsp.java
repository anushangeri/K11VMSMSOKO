/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.30
 * Generated at: 2021-02-09 03:33:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.lang3.StringUtils;
import java.util.*;
import java.io.IOException;
import java.net.URL;
import com.google.gdata.client.spreadsheet.SpreadsheetService;
import com.google.gdata.data.spreadsheet.CustomElementCollection;
import com.google.gdata.data.spreadsheet.ListEntry;
import com.google.gdata.data.spreadsheet.ListFeed;
import com.google.gdata.util.ServiceException;
import net.javatutorial.entity.*;

public final class vmsCheckNRIC_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/loginVMSCSS.jsp", Long.valueOf(1611372290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("net.javatutorial.entity");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URL");
    _jspx_imports_classes.add("com.google.gdata.client.spreadsheet.SpreadsheetService");
    _jspx_imports_classes.add("com.google.gdata.data.spreadsheet.ListEntry");
    _jspx_imports_classes.add("java.io.IOException");
    _jspx_imports_classes.add("com.google.gdata.data.spreadsheet.CustomElementCollection");
    _jspx_imports_classes.add("com.google.gdata.util.ServiceException");
    _jspx_imports_classes.add("org.apache.commons.lang3.StringUtils");
    _jspx_imports_classes.add("com.google.gdata.data.spreadsheet.ListFeed");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"favicon-96x96.png\">\r\n");
      out.write("<!--Method #1 of Initializing Bootstrap-->\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\" media=\"all\">\r\n");
      out.write("<!-- Optional theme -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap-theme.min.css\" media=\"all\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/styles.css\" media=\"all\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=' http://fonts.googleapis.com/css?family=Inconsolata|Droid+Sans'\r\n");
      out.write("\trel='stylesheet' type='text/css'>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".navbar-default {\r\n");
      out.write("\tbackground-color: #9b59b6;\r\n");
      out.write("\tborder-color: #8e44ad;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-brand {\r\n");
      out.write("\tcolor: #ff6600;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus\r\n");
      out.write("\t{\r\n");
      out.write("\tcolor: #ecdbff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-text {\r\n");
      out.write("\tcolor: #ff6600;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-nav>li>a {\r\n");
      out.write("\tcolor: #ff6600;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-nav>li>a:hover, .navbar-default .navbar-nav>li>a:focus\r\n");
      out.write("\t{\r\n");
      out.write("\tcolor: #ecdbff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-nav>.active>a, .navbar-default .navbar-nav>.active>a:hover,\r\n");
      out.write("\t.navbar-default .navbar-nav>.active>a:focus {\r\n");
      out.write("\tcolor: #ecdbff;\r\n");
      out.write("\tbackground-color: #8e44ad;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-nav>.open>a, .navbar-default .navbar-nav>.open>a:hover,\r\n");
      out.write("\t.navbar-default .navbar-nav>.open>a:focus {\r\n");
      out.write("\tcolor: #ecdbff;\r\n");
      out.write("\tbackground-color: #8e44ad;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-toggle {\r\n");
      out.write("\tborder-color: #8e44ad;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus\r\n");
      out.write("\t{\r\n");
      out.write("\tbackground-color: #8e44ad;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-toggle .icon-bar {\r\n");
      out.write("\tbackground-color: #ecf0f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-collapse, .navbar-default .navbar-form {\r\n");
      out.write("\tborder-color: #ecf0f1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-link {\r\n");
      out.write("\tcolor: #ff6600;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-default .navbar-link:hover {\r\n");
      out.write("\tcolor: #ecdbff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".list{\r\n");
      out.write("\tbackground-color: #FFA8A4 !important;\r\n");
      out.write("}\r\n");
      out.write("#tableview{\r\n");
      out.write("\twidth: 80% !important;\r\n");
      out.write("\tmargin-left: 2% !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-color: #F3F3F3;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<nav class=\"navbar list\" role=\"navigation\">\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t<!-- add links in nav bar if request by client -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- /.container-fluid -->\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<!-- Include all compiled plugins (below), or include individual files as needed -->\r\n");
      out.write("<script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<title>K11 VMS</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1 id=\"k11title\">VMS MSOKO</h1>\r\n");
      out.write("\t<center><b>by K11 SECURITY ENGINEERING</b></center>\r\n");
      out.write("\t<br>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/styles.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://drvic10k.github.io/bootstrap-sortable/Scripts/bootstrap-sortable.js\"\r\n");
      out.write("\ttype=\"text/javascript\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction validateForm() {\r\n");
      out.write("\t\tvar idNo = document.forms[\"checkNRIC\"][\"idNo\"].value;\r\n");
      out.write("\t\tvar idType = document.forms[\"checkNRIC\"][\"idType\"].value;\r\n");
      out.write("\t\tvar first = idNo.charAt(0);\r\n");
      out.write("\t\tvar isDigitFirst = (first >= '0' && first <= '9');\r\n");
      out.write("\t\tvar second = idNo.charAt(1);\r\n");
      out.write("\t\tvar isDigitSecond = (second >= '0' && second <= '9');\r\n");
      out.write("\t\tvar third = idNo.charAt(2);\r\n");
      out.write("\t\tvar isDigitThird = (third >= '0' && third <= '9');\r\n");
      out.write("\t\tvar forth = idNo.charAt(3);\r\n");
      out.write("\t\tvar isDigitForth = (forth >= '0' && forth <= '9');\r\n");
      out.write("\t\tif (x != \"K11ADMIN\" && (idType == \"NRIC\" || idType == \"FIN\") &&\r\n");
      out.write("\t\t\t\t(!isDigitFirst || !isDigitSecond || !isDigitThird || isDigitForth))  {\r\n");
      out.write("\t\t\talert(\"PDPA Compliance: Enter ONLY last 3 digit and letter of ID Number. E.g. 409J\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (x != \"K11ADMIN\" && (idType == \"PASSPORT NO.\") &&\r\n");
      out.write("\t\t\t\t(!isDigitFirst || !isDigitSecond || !isDigitThird || !isDigitForth))  {\r\n");
      out.write("\t\t\talert(\"PDPA Compliance: Enter ONLY last 4 digit of Passport No. E.g. 4456\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		ArrayList<String> idType = new ArrayList<String>();
		SpreadsheetService service = new SpreadsheetService("K11CLICKS: DROPDOWN EXCEL");
		try {
			//Dropdown for idType START
			String idTypeUrl = "https://spreadsheets.google.com/feeds/list/116L_MDacE0331uQDZLRQD4UKpKXfHgWKcMFeD0ne324/3/public/values";
			// Use this String as url
			URL idTypeurl = new URL(idTypeUrl);

			// Get Feed of Spreadsheet url
			ListFeed idTypelf = service.getFeed(idTypeurl, ListFeed.class);

			for (ListEntry le : idTypelf.getEntries()) {
				CustomElementCollection cec = le.getCustomElements();
				idType.add(cec.getValue("idtype").trim());
			}
			//Dropdown for idType END

		} catch (Exception e) {
	
      out.write("\r\n");
      out.write("\t\t\t<h1>");
      out.print(e);
      out.write("</h1>\r\n");
      out.write("\t");

		}
		session.removeAttribute("usertype");
		session.removeAttribute("name");
		session.removeAttribute("idType");
	
      out.write("\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t<b>*Individuals are required to self-identify should they\r\n");
      out.write("\t\t\texperience any COVID-19 symptoms.</b>\r\n");
      out.write("\r\n");
      out.write("\t\t<form name=\"checkNRIC\" action=\"vmsCheckNRIC\" method=\"post\"\r\n");
      out.write("\t\t\tonsubmit=\"return validateForm()\">\r\n");
      out.write("\t\t\t<div class=\"form-row\">\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-6\">\r\n");
      out.write("\t\t\t\t\t<label for=\"name\">Visitor Name: </label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" name=\"name\"\r\n");
      out.write("\t\t\t\t\t\toninput=\"this.value = this.value.toUpperCase()\" required>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-4\">\r\n");
      out.write("\t\t\t\t\t<label for=\"idType\">ID Type: </label> <select name=\"idType\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" required>\r\n");
      out.write("\t\t\t\t\t\t");

						for (int i = 0; i < idType.size(); i++) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<option value=\"");
      out.print(idType.get(i));
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(idType.get(i));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t");

						}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group col-md-6\">\r\n");
      out.write("\t\t\t\t\t<label for=\"idNo\">ID Number: </label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"form-control\" name=\"idNo\" id=\"idNo\" placeholder=\"xxx\"\r\n");
      out.write("\t\t\t\t\t\tminlength=\"4\" maxlength=\"9\" required>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"recordType\" name=\"recordType\" value=");
      out.print(request.getParameter("recordType"));
      out.write(">\r\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Check NRIC</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
